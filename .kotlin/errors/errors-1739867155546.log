kotlin version: 2.1.0
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: /Users/aurorastudyvn/Workspace/Software/HinsunMusic/AHinsunMusic/core/src/main/java/org/hinsun/core/extensions/DataStoreExt.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:48)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:55)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:42)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:28)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:27)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:14)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:192)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.runBackend(jvmCompilerPipeline.kt:80)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineLightTreeKt.compileModule(jvmCompilerPipelineLightTree.kt:264)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineLightTreeKt.compileSingleModuleUsingFrontendIrAndLightTree(jvmCompilerPipelineLightTree.kt:231)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineLightTreeKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipelineLightTree.kt:86)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:146)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:43)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:102)
	at org.jetbrains.kotlin.cli.common.CLICompiler.exec(CLICompiler.kt:316)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:464)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally$lambda$9$compile(IncrementalCompilerRunner.kt:249)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally(IncrementalCompilerRunner.kt:267)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:120)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:674)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:91)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1659)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:rememberPreference visibility:public modality:FINAL <T> (key:androidx.datastore.preferences.core.Preferences.Key<T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference>, defaultValue:T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference) returnType:androidx.compose.runtime.MutableState<T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference>
  annotations:
    Composable
  TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false
  VALUE_PARAMETER name:key index:0 type:androidx.datastore.preferences.core.Preferences.Key<T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference>
  VALUE_PARAMETER name:defaultValue index:1 type:T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference
  BLOCK_BODY
    VAR name:context type:android.content.Context [val]
      CALL 'public final fun <get-current> (): T of androidx.compose.runtime.CompositionLocal [inline] declared in androidx.compose.runtime.CompositionLocal' type=android.content.Context origin=GET_PROPERTY
        $this: TYPE_OP type=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal>
          CALL 'public final fun <get-LocalContext> (): androidx.compose.runtime.ProvidableCompositionLocal<android.content.Context> declared in androidx.compose.ui.platform.AndroidCompositionLocals_androidKt' type=androidx.compose.runtime.ProvidableCompositionLocal<android.content.Context> origin=GET_PROPERTY
    VAR name:coroutineScope type:kotlinx.coroutines.CoroutineScope [val]
      CALL 'public final fun rememberCoroutineScope$default (getContext: @[DisallowComposableCalls] kotlin.Function0<kotlin.coroutines.CoroutineContext>?, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlinx.coroutines.CoroutineScope [inline] declared in androidx.compose.runtime.EffectsKt' type=kotlinx.coroutines.CoroutineScope origin=DEFAULT_DISPATCH_CALL
        getContext: COMPOSITE type=@[DisallowComposableCalls] kotlin.Function0<kotlin.coroutines.CoroutineContext>? origin=DEFAULT_VALUE
          CONST Null type=@[DisallowComposableCalls] kotlin.Function0<kotlin.coroutines.CoroutineContext>? value=null
        $mask0: CONST Int type=kotlin.Int value=1
        $handler: CONST Null type=kotlin.Any? value=null
    VAR name:state type:androidx.compose.runtime.State<T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference> [val]
      TYPE_OP type=androidx.compose.runtime.State<T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.State<T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference>
        CALL 'public final fun collectAsState$default <T, R> (initial: R of androidx.compose.runtime.SnapshotStateKt.collectAsState$default, context: kotlin.coroutines.CoroutineContext?, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.runtime.State<R of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> declared in androidx.compose.runtime.SnapshotStateKt' type=androidx.compose.runtime.State<R of androidx.compose.runtime.SnapshotStateKt.collectAsState$default> origin=DEFAULT_DISPATCH_CALL
          <T>: T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference
          <R>: T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference
          $receiver: CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=kotlinx.coroutines.flow.Flow<T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference> origin=null
            <T>: kotlinx.coroutines.flow.Flow<T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference>
            calculation: BLOCK type=kotlin.Function0<kotlinx.coroutines.flow.Flow<T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference>> origin=LAMBDA
              COMPOSITE type=kotlin.Unit origin=null
              FUNCTION_REFERENCE 'private final fun rememberPreference$lambda$1 <T> ($context: android.content.Context, $key: androidx.datastore.preferences.core.Preferences.Key<T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference$lambda$1>, $defaultValue: T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference$lambda$1): kotlinx.coroutines.flow.Flow<T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference$lambda$1> declared in org.hinsun.core.extensions.DataStoreExtKt' type=kotlin.Function0<kotlinx.coroutines.flow.Flow<T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference>> origin=INLINE_LAMBDA reflectionTarget=null
                <T>: T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference
                $context: GET_VAR 'val context: android.content.Context [val] declared in org.hinsun.core.extensions.DataStoreExtKt.rememberPreference' type=android.content.Context origin=null
                $key: GET_VAR 'key: androidx.datastore.preferences.core.Preferences.Key<T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference> declared in org.hinsun.core.extensions.DataStoreExtKt.rememberPreference' type=androidx.datastore.preferences.core.Preferences.Key<T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference> origin=null
                $defaultValue: GET_VAR 'defaultValue: T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference declared in org.hinsun.core.extensions.DataStoreExtKt.rememberPreference' type=T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference origin=null
          initial: BLOCK type=T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference origin=FOLDED_ELVIS
            WHEN type=T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference origin=FOLDED_ELVIS
              BRANCH
                if: COMPOSITE type=kotlin.Boolean origin=null
                  VAR IR_TEMPORARY_VARIABLE name:tmp0_elvis_lhs type:T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference? [val]
                    CALL 'public final fun get <T> (key: androidx.datastore.preferences.core.Preferences.Key<T of org.hinsun.core.extensions.DataStoreExtKt.get>): T of org.hinsun.core.extensions.DataStoreExtKt.get? [operator] declared in org.hinsun.core.extensions.DataStoreExtKt' type=T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference? origin=GET_ARRAY_ELEMENT
                      <T>: T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference
                      $receiver: CALL 'public final fun <get-dataStore> (): androidx.datastore.core.DataStore<androidx.datastore.preferences.core.Preferences> declared in org.hinsun.core.extensions.DataStoreExtKt' type=androidx.datastore.core.DataStore<androidx.datastore.preferences.core.Preferences> origin=GET_PROPERTY
                        $receiver: GET_VAR 'val context: android.content.Context [val] declared in org.hinsun.core.extensions.DataStoreExtKt.rememberPreference' type=android.content.Context origin=null
                      key: GET_VAR 'key: androidx.datastore.preferences.core.Preferences.Key<T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference> declared in org.hinsun.core.extensions.DataStoreExtKt.rememberPreference' type=androidx.datastore.preferences.core.Preferences.Key<T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference> origin=null
                  CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
                    $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                      arg0: GET_VAR 'val tmp0_elvis_lhs: T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference? [val] declared in org.hinsun.core.extensions.DataStoreExtKt.rememberPreference' type=T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference? origin=null
                      arg1: CONST Null type=kotlin.Nothing? value=null
                then: GET_VAR 'val tmp0_elvis_lhs: T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference? [val] declared in org.hinsun.core.extensions.DataStoreExtKt.rememberPreference' type=T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference? origin=null
              BRANCH
                if: CONST Boolean type=kotlin.Boolean value=true
                then: GET_VAR 'defaultValue: T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference declared in org.hinsun.core.extensions.DataStoreExtKt.rememberPreference' type=T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference origin=null
          context: COMPOSITE type=kotlin.coroutines.CoroutineContext? origin=DEFAULT_VALUE
            CONST Null type=kotlin.coroutines.CoroutineContext? value=null
          $mask0: CONST Int type=kotlin.Int value=2
          $handler: CONST Null type=kotlin.Any? value=null
    RETURN type=kotlin.Nothing from='public final fun rememberPreference <T> (key: androidx.datastore.preferences.core.Preferences.Key<T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference>, defaultValue: T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference): androidx.compose.runtime.MutableState<T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference> declared in org.hinsun.core.extensions.DataStoreExtKt'
      CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=org.hinsun.core.extensions.DataStoreExtKt.rememberPreference$lambda$2.<no name provided><T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference> origin=null
        <T>: org.hinsun.core.extensions.DataStoreExtKt.rememberPreference$lambda$2.<no name provided><T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference>
        calculation: BLOCK type=kotlin.Function0<org.hinsun.core.extensions.DataStoreExtKt.rememberPreference$lambda$2.<no name provided><T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference>> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun rememberPreference$lambda$2 <T> ($state: androidx.compose.runtime.State<T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference$lambda$2>, $coroutineScope: kotlinx.coroutines.CoroutineScope, $context: android.content.Context, $key: androidx.datastore.preferences.core.Preferences.Key<T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference$lambda$2>): org.hinsun.core.extensions.DataStoreExtKt.rememberPreference$lambda$2.<no name provided><T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference$lambda$2> declared in org.hinsun.core.extensions.DataStoreExtKt' type=kotlin.Function0<org.hinsun.core.extensions.DataStoreExtKt.rememberPreference$lambda$2.<no name provided><T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference>> origin=INLINE_LAMBDA reflectionTarget=null
            <T>: T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference
            $state: GET_VAR 'val state: androidx.compose.runtime.State<T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference> [val] declared in org.hinsun.core.extensions.DataStoreExtKt.rememberPreference' type=androidx.compose.runtime.State<T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference> origin=null
            $coroutineScope: GET_VAR 'val coroutineScope: kotlinx.coroutines.CoroutineScope [val] declared in org.hinsun.core.extensions.DataStoreExtKt.rememberPreference' type=kotlinx.coroutines.CoroutineScope origin=null
            $context: GET_VAR 'val context: android.content.Context [val] declared in org.hinsun.core.extensions.DataStoreExtKt.rememberPreference' type=android.content.Context origin=null
            $key: GET_VAR 'key: androidx.datastore.preferences.core.Preferences.Key<T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference> declared in org.hinsun.core.extensions.DataStoreExtKt.rememberPreference' type=androidx.datastore.preferences.core.Preferences.Key<T of org.hinsun.core.extensions.DataStoreExtKt.rememberPreference> origin=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:48)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:41)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:407)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:424)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:169)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:39)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseFactoriesKt.createFilePhase$lambda$4(PhaseFactories.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:69)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:52)
	... 46 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun <get-current> (): T of androidx.compose.runtime.CompositionLocal [inline] declared in androidx.compose.runtime.CompositionLocal' type=android.content.Context origin=GET_PROPERTY
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:163)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:598)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:735)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.declarations.IrVariable.accept(IrVariable.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:524)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:529)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:236)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:124)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:45)
	... 56 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/runtime/CompositionLocal;.getCurrent()Ljava/lang/Object;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 71 more


